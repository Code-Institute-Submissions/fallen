import os
from flask import Flask, render_template, redirect, request, url_for
from flask_pymongo import PyMongo
from bson.objectid import ObjectId 

app = Flask(__name__)
app.config["MONGO_DBNAME"] = 'MS3_project'
app.config["MONGO_URI"] = 'mongodb+srv://rOOtUser:betteroption@myfirstcluster-97xkz.mongodb.net/MS3_project?retryWrites=true&w=majority'
# os.getenv('MONGO_URI', 'mongodb://localhost')

mongo = PyMongo(app)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/firstSteps')
def firstSteps():
    return render_template('firstSteps.html', firstSteps=mongo.db.firstSteps.find())

@app.route('/myProblem', methods=['GET', 'POST'])
def myProblem():
    if request.method == 'GET':
        return render_template('myProblem.html', myProblem=mongo.db.myProblem.find())
    else:
        insert_myProblem = mongo.db.myProblem
        insert_myProblem.insert_one(request.form.to_dict())
        return redirect(url_for('index'))


# @app.route('/get_tasks')
# def get_tasks():
#     return render_template('tasks.html', get_tasks=mongo.db.tasks.find())

# @app.route('/categories', methods=['GET', 'POST'])
# def categories():
#     if request.method == 'GET':
#         return render_template('categories.html', myProblem=mongo.db.categories.find())
#     else:
#         update_categories = mongo.db.categories
#         update_categories.update_one(request.form.to_dict())
#         return redirect(url_for('index'))


# class aliasx:
#     username = 'hhh'
#     password = 'uuu'

# @app.route('/alias', methods=['GET', 'POST'])
# def alias():
#     if request.method == 'GET':
#         return render_template('myProblem.html', myProblem=mongo.db.myProblem.find())
#     else:
#         insert_myProblem = mongo.db.myProblem
#         insert_myProblem.insert_one(request.form.to_dict())
#         return redirect(url_for('index'))

# @app.route('/alias/<user_id>', methods=['GET', 'POST'])
# def alias():
#     """
#     GET route to show user their details
#     """
    
#     user = mongo.db.user.find_one({'_id': ObjectId(user_id)}) # Not sure where you are getting user_idd from here?
    
#     return render_template('alias.html', user=user)
@app.route('/alias', methods=['GET', 'POST'])
def alias():
     return render_template('alias.html', alias=mongo.db.user.find())
    # user_name=mongo.db.user.find()
   
    # return render_template('alias.html', user_name=user_name)
    # return render_template('alias.html', alias = mongo.db.user.find_one({"user_name": 'alias'}))
    # return render_template('alias.html', alias = mongo.db.user.find_one({"_id":ObjectId(user_id)})

@app.route('/update_my_details/<user_id>', methods=['GET', 'POST'])
def update_my_details(user_id):
    #The update route will take a ID as param which I assume you pass from the GET route when loading the users alias.
    """
    Route to accept a POST from the alias homepage and pass the user_id
    of the alias as a param for use in the update method.
    """
    user_name = mongo.db.user.find_one({'user_name': request.form.get(user_id)})
    print(user_name)
    if request.method == 'POST':
        # update_alias = mongo.db.user()
        # update_alias.update_one(request.form.to_dict())
        # update_alias.update_one()
        return redirect(url_for('index'))

    # if request.method == "POST":
    #     if form.validate_on_submit():
    #         alias = mongo.db.user
    #         alias.find_one_and_update({
    #                 '_id': ObjectId(user_id),
    #                 }, {
    #                     '$set': {
    #                     'user_name': request.form.get('user_name')
    #                         }
    #             })
    #         # flash('Details Updated!')
    #         return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(host='0.0.0.0',
            port=(os.environ.get('PORT')), 
            debug=True)


# if __name__ == '__main__':
#     app.run(host=os.environ.get('IP'),
#             port=(os.environ.get('PORT')),
#             debug=True)

# if __name__ == '__main__':
#     app.run(host='0.0.0.0',
#             port=(os.environ.get('PORT')), 
#             debug=True)


#     # return render_template('alias.html', alias = mongo.db.user.find_one({"user_name": 'alias'}))
#     # activity = db.activities.find_one({"_id": ObjectId(activity_id)})


# @app.route('/alias/<user_id>', methods=['GET', 'POST'])
# def editAlias(user_id):
#     editAlias = { '_id': ObjectId(user_id) }
#     newvalues = { "$set": { "user_name": request.form.get('user_name'), "keyword": request.form.get('keyword')}}
#     mongo.db.user.update_one(editAlias, newvalues)
#     return redirect(url_for('aliasConfirmed'))

# return render_template('alias.html', alias=aliasx())

# @app.route('/users/')
# def users():
#     users = User.objects.all()can we not pu
#     return render_template('users.html', u=users)
# @app.route('/hello/<user>')
# def hello_name(user):
#    return render_template('hello.html', name = user)



# @app.route('/get_categories')
# def get_categories():
#     return render_template('categories.html',
#         categories=mongo.db.categories.find())
                           

# @app.route('/edit_category/<category_id>')
# def edit_category(category_id):
#     return render_template('editcategory.html',
#         category=mongo.db.categories.find_one({'_id': ObjectId(category_id)}))


# @app.route('/update_category/<category_id>', methods=['POST'])
# def update_category(category_id):
#     mongo.db.categories.update(
#         {'_id': ObjectId(category_id)},
#         {'category_name': request.form.get('category_name')})
#     return redirect(url_for('get_categories')