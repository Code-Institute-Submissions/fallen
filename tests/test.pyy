import os
from flask import Flask, render_template, redirect, request, url_for
from flask_pymongo import PyMongo
# from bson.objectid import ObjectId

app = Flask(__name__)

app.config["MONGO_URI"] = os.getenv('MONGO_URI', 'mongodb://localhost')
app.config["MONGO_DBNAME"] = 'MS3_project'

mongo = PyMongo(app)


   ++++++Early tests
@app.route('/')
def hello():
    return "ALL GOOD"

+++++++++ November tests

+++++++++ November tests testing if Flask could return anything in isolation.
We subs the results of the Mongo query with a python class containing test data. 
To see if the problem with flask or mongo . 
if flask could return the test data then the problem must be with mongo.
the result of this test was that it was returning test data fine so we knew the problem was with mongo and 
we then noticed a spelling mistake in the names of the field or attribute withiin our mongo documents 
class aliasx:
    username = 'hhh'
    password = 'uuu'

    
{% extends 'base.html' %}
{% block content %}
<h1>Hi, {{ user.username }}!</h1>
    {% for post in posts %}
    <div><p>{{ post.author.username }} says: <b>{{ post.body }}</b></p></div>
    {% endfor %}



class aliasx:
    username = 'hhh'
    password = 'uuu'

@app.route('/alias')
def alias():
    # return render_template('alias.html', alias=mongo.db.user.find())
    return render_template('alias.html', alias=mongo.db.user.find_one())
    # return render_template('alias.html', alias=aliasx())



@app.route('/imageTest')
def imageTest():
    return render_template('imageTest.html')



def index():
    changes=mongo.db.changes.find()
    return changes

def test_index():
    assert index() != None
mongo = PyMongo(app)

if __name__ == "__main__":
    test_index()
    print("Everything passed")


    if __name__ == '__main__':
    app.run(host=os.environ.get('IP'),
            port=(os.environ.get('PORT')),
            debug=True)





  



